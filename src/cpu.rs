#![allow(unused_variables)]

extern crate yaml_rust;

use std::fs;
use std::fs::File;
use std::io::prelude::*;
use yaml_rust::{YamlLoader, YamlEmitter, Yaml};

pub const PROG_ROM_MAX_SIZE: usize = 0x8000;
pub const CHAR_ROM_MAX_SIZE: usize = 0x2000;
pub const PROG_ROM_UNIT_SIZE: usize = 0x4000;
pub const CHAR_ROM_UNIT_SIZE: usize = 0x2000;
pub const NES_HSIZE: usize = 0x0010;

const CARRY: u8 = 1 << 0;
const ZERO: u8 = 1 << 1;
const IRQ: u8 = 1 << 2;
const DECIMAL: u8 = 1 << 3;
const BREAK: u8 = 1 << 4;
const OVERFLOW: u8 = 1 << 6;
const NEGATIVE: u8 = 1 << 7;

enum AddrModes {
    IMPL,
    ACM,
    IMD,
    ZPG,
    ZPG_X,
    ZPG_Y,
    ABS,
    ABS_X,
    ABS_Y,
    REL,
    IND_X,
    IND_Y,
    ABS_IND,
}

enum OpCodes {
    ADC,
    SBC,
    AND,
    ORA,
    EOR,
    ASL,
    LSR,
    ROL,
    ROR,
    BCC,
    BCS,
    BEQ,
    BNE,
    BVC,
    BVS,
    BPL,
    BMI,
    BIT,
    JMP,
    JSR,
    RTS,
    BRK,
    RTI,
    CMP,
    CPX,
    CPY,
    INC,
    DEC,
    INX,
    DEX,
    INY,
    DEY,
    CLC,
    SEC,
    CLI,
    SEI,
    CLD,
    SED,
    CLV,
    LDA,
    LDX,
    LDY,
    STA,
    STX,
    STY,
    TAX,
    TXA,
    TAY,
    TYA,
    TSX,
    TXS,
    PHA,
    PLA,
    PHP,
    PLP,
    NOPD,
    NOPI,
    NOP,
    LAX,
    SAX,
    DCP,
    ISB,
    SLO,
    RLA,
    SRE,
    RRA,
}

struct OpInfo {
    i: u8,
    cycle: u8,
    mode: AddrModes,
    op: OpCodes,
}
impl OpInfo {
    fn new(i: u8, cycle: u8, mode: AddrModes, op:OpCodes) -> OpInfo {
        OpInfo {
            i: i,
            cycle: cycle,
            mode: mode,
            op: op,
        }
    }
}

// const op_table:[OpInfo; 256]  = [
//     OpInfo {i: 0x00, cycle:7, mode: AddrMode::IMPL, op: OpCodes::BRK},
//     OpInfo {i: 0x01, cycle:6, mode: AddrMode::IND_X, op: OpCodes::ORA},
//     OpInfo {i: 0x02, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0x03, cycle:8, mode: AddrMode::IND_X, op: OpCodes::SLO},
//     OpInfo {i: 0x04, cycle:3, mode: AddrMode::IMPL, op: OpCodes::NOPD},
//     OpInfo {i: 0x05, cycle:3, mode: AddrMode::ZPG, op: OpCodes::ORA},
//     OpInfo {i: 0x06, cycle:5, mode: AddrMode::ZPG, op: OpCodes::ASL},
//     OpInfo {i: 0x07, cycle:5, mode: AddrMode::ZPG, op: OpCodes::SLO},
//     OpInfo {i: 0x08, cycle:3, mode: AddrMode::IMPL, op: OpCodes::PHP},
//     OpInfo {i: 0x09, cycle:2, mode: AddrMode::IMD, op: OpCodes::ORA},
//     OpInfo {i: 0x0A, cycle:2, mode: AddrMode::ACM, op: OpCodes::ASL},
//     OpInfo {i: 0x0C, cycle:4, mode: AddrMode::IMPL, op: OpCodes::NOPI},
//     OpInfo {i: 0x0D, cycle:4, mode: AddrMode::ABS, op: OpCodes::ORA},
//     OpInfo {i: 0x0E, cycle:6, mode: AddrMode::ABS, op: OpCodes::ASL},
//     OpInfo {i: 0x0F, cycle:6, mode: AddrMode::ABS, op: OpCodes::SLO},
//     OpInfo {i: 0x10, cycle:2, mode: AddrMode::REL, op: OpCodes::BPL},
//     OpInfo {i: 0x11, cycle:5, mode: AddrMode::IND_Y, op: OpCodes::ORA},
//     OpInfo {i: 0x12, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0x13, cycle:8, mode: AddrMode::IND_Y, op: OpCodes::SLO},
//     OpInfo {i: 0x14, cycle:4, mode: AddrMode::IMPL, op: OpCodes::NOPD},
//     OpInfo {i: 0x15, cycle:4, mode: AddrMode::ZPG_X, op: OpCodes::ORA},
//     OpInfo {i: 0x16, cycle:6, mode: AddrMode::ZPG_X, op: OpCodes::ASL},
//     OpInfo {i: 0x17, cycle:6, mode: AddrMode::ZPG_X, op: OpCodes::SLO},
//     OpInfo {i: 0x18, cycle:2, mode: AddrMode::IMPL, op: OpCodes::CLC},
//     OpInfo {i: 0x19, cycle:4, mode: AddrMode::ABS_Y, op: OpCodes::ORA},
//     OpInfo {i: 0x1A, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0x1B, cycle:7, mode: AddrMode::ABS_Y, op: OpCodes::SLO},
//     OpInfo {i: 0x1C, cycle:4, mode: AddrMode::IMPL, op: OpCodes::NOPI},
//     OpInfo {i: 0x1D, cycle:4, mode: AddrMode::ABS_X, op: OpCodes::ORA},
//     OpInfo {i: 0x1E, cycle:6, mode: AddrMode::ABS_X, op: OpCodes::ASL},
//     OpInfo {i: 0x1F, cycle:7, mode: AddrMode::ABS_X, op: OpCodes::SLO},
//     OpInfo {i: 0x20, cycle:6, mode: AddrMode::ABS, op: OpCodes::JSR},
//     OpInfo {i: 0x21, cycle:6, mode: AddrMode::IND_X, op: OpCodes::AND},
//     OpInfo {i: 0x22, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0x23, cycle:8, mode: AddrMode::IND_X, op: OpCodes::RLA},
//     OpInfo {i: 0x24, cycle:3, mode: AddrMode::ZPG, op: OpCodes::BIT},
//     OpInfo {i: 0x25, cycle:3, mode: AddrMode::ZPG, op: OpCodes::AND},
//     OpInfo {i: 0x26, cycle:5, mode: AddrMode::ZPG, op: OpCodes::ROL},
//     OpInfo {i: 0x27, cycle:5, mode: AddrMode::ZPG, op: OpCodes::RLA},
//     OpInfo {i: 0x28, cycle:4, mode: AddrMode::IMPL, op: OpCodes::PLP},
//     OpInfo {i: 0x29, cycle:2, mode: AddrMode::IMD, op: OpCodes::AND},
//     OpInfo {i: 0x2A, cycle:2, mode: AddrMode::ACM, op: OpCodes::ROL},
//     OpInfo {i: 0x2C, cycle:4, mode: AddrMode::ABS, op: OpCodes::BIT},
//     OpInfo {i: 0x2D, cycle:4, mode: AddrMode::ABS, op: OpCodes::AND},
//     OpInfo {i: 0x2E, cycle:6, mode: AddrMode::ABS, op: OpCodes::ROL},
//     OpInfo {i: 0x2F, cycle:6, mode: AddrMode::ABS, op: OpCodes::RLA},
//     OpInfo {i: 0x30, cycle:2, mode: AddrMode::REL, op: OpCodes::BMI},
//     OpInfo {i: 0x31, cycle:5, mode: AddrMode::IND_Y, op: OpCodes::AND},
//     OpInfo {i: 0x32, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0x33, cycle:8, mode: AddrMode::IND_Y, op: OpCodes::RLA},
//     OpInfo {i: 0x34, cycle:4, mode: AddrMode::IMPL, op: OpCodes::NOPD},
//     OpInfo {i: 0x35, cycle:4, mode: AddrMode::ZPG_X, op: OpCodes::AND},
//     OpInfo {i: 0x36, cycle:6, mode: AddrMode::ZPG_X, op: OpCodes::ROL},
//     OpInfo {i: 0x37, cycle:6, mode: AddrMode::ZPG_X, op: OpCodes::RLA},
//     OpInfo {i: 0x38, cycle:2, mode: AddrMode::IMPL, op: OpCodes::SEC},
//     OpInfo {i: 0x39, cycle:4, mode: AddrMode::ABS_Y, op: OpCodes::AND},
//     OpInfo {i: 0x3A, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0x3B, cycle:7, mode: AddrMode::ABS_Y, op: OpCodes::RLA},
//     OpInfo {i: 0x3C, cycle:4, mode: AddrMode::IMPL, op: OpCodes::NOPI},
//     OpInfo {i: 0x3D, cycle:4, mode: AddrMode::ABS_X, op: OpCodes::AND},
//     OpInfo {i: 0x3E, cycle:6, mode: AddrMode::ABS_X, op: OpCodes::ROL},
//     OpInfo {i: 0x3F, cycle:7, mode: AddrMode::ABS_X, op: OpCodes::RLA},
//     OpInfo {i: 0x40, cycle:6, mode: AddrMode::IMPL, op: OpCodes::RTI},
//     OpInfo {i: 0x41, cycle:6, mode: AddrMode::IND_X, op: OpCodes::EOR},
//     OpInfo {i: 0x42, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0x43, cycle:8, mode: AddrMode::IND_X, op: OpCodes::SRE},
//     OpInfo {i: 0x44, cycle:3, mode: AddrMode::IMPL, op: OpCodes::NOPD},
//     OpInfo {i: 0x45, cycle:3, mode: AddrMode::ZPG, op: OpCodes::EOR},
//     OpInfo {i: 0x46, cycle:5, mode: AddrMode::ZPG, op: OpCodes::LSR},
//     OpInfo {i: 0x47, cycle:5, mode: AddrMode::ZPG, op: OpCodes::SRE},
//     OpInfo {i: 0x48, cycle:3, mode: AddrMode::IMPL, op: OpCodes::PHA},
//     OpInfo {i: 0x49, cycle:2, mode: AddrMode::IMD, op: OpCodes::EOR},
//     OpInfo {i: 0x4A, cycle:2, mode: AddrMode::ACM, op: OpCodes::LSR},
//     OpInfo {i: 0x4C, cycle:3, mode: AddrMode::ABS, op: OpCodes::JMP},
//     OpInfo {i: 0x4D, cycle:4, mode: AddrMode::ABS, op: OpCodes::EOR},
//     OpInfo {i: 0x4E, cycle:6, mode: AddrMode::ABS, op: OpCodes::LSR},
//     OpInfo {i: 0x4F, cycle:6, mode: AddrMode::ABS, op: OpCodes::SRE},
//     OpInfo {i: 0x50, cycle:2, mode: AddrMode::REL, op: OpCodes::BVC},
//     OpInfo {i: 0x51, cycle:5, mode: AddrMode::IND_Y, op: OpCodes::EOR},
//     OpInfo {i: 0x52, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0x53, cycle:8, mode: AddrMode::IND_Y, op: OpCodes::SRE},
//     OpInfo {i: 0x54, cycle:4, mode: AddrMode::IMPL, op: OpCodes::NOPD},
//     OpInfo {i: 0x55, cycle:4, mode: AddrMode::ZPG_X, op: OpCodes::EOR},
//     OpInfo {i: 0x56, cycle:6, mode: AddrMode::ZPG_X, op: OpCodes::LSR},
//     OpInfo {i: 0x57, cycle:6, mode: AddrMode::ZPG_X, op: OpCodes::SRE},
//     OpInfo {i: 0x58, cycle:2, mode: AddrMode::IMPL, op: OpCodes::CLI},
//     OpInfo {i: 0x59, cycle:4, mode: AddrMode::ABS_Y, op: OpCodes::EOR},
//     OpInfo {i: 0x5A, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0x5B, cycle:7, mode: AddrMode::ABS_Y, op: OpCodes::SRE},
//     OpInfo {i: 0x5C, cycle:4, mode: AddrMode::IMPL, op: OpCodes::NOPI},
//     OpInfo {i: 0x5D, cycle:4, mode: AddrMode::ABS_X, op: OpCodes::EOR},
//     OpInfo {i: 0x5E, cycle:6, mode: AddrMode::ABS_X, op: OpCodes::LSR},
//     OpInfo {i: 0x5F, cycle:7, mode: AddrMode::ABS_X, op: OpCodes::SRE},
//     OpInfo {i: 0x60, cycle:6, mode: AddrMode::IMPL, op: OpCodes::RTS},
//     OpInfo {i: 0x61, cycle:6, mode: AddrMode::IND_X, op: OpCodes::ADC},
//     OpInfo {i: 0x62, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0x63, cycle:8, mode: AddrMode::IND_X, op: OpCodes::RRA},
//     OpInfo {i: 0x64, cycle:3, mode: AddrMode::IMPL, op: OpCodes::NOPD},
//     OpInfo {i: 0x65, cycle:3, mode: AddrMode::ZPG, op: OpCodes::ADC},
//     OpInfo {i: 0x66, cycle:5, mode: AddrMode::ZPG, op: OpCodes::ROR},
//     OpInfo {i: 0x67, cycle:5, mode: AddrMode::ZPG, op: OpCodes::RRA},
//     OpInfo {i: 0x68, cycle:4, mode: AddrMode::IMPL, op: OpCodes::PLA},
//     OpInfo {i: 0x69, cycle:2, mode: AddrMode::IMD, op: OpCodes::ADC},
//     OpInfo {i: 0x6A, cycle:2, mode: AddrMode::ACM, op: OpCodes::ROR},
//     OpInfo {i: 0x6C, cycle:5, mode: AddrMode::ABS_IND, op: OpCodes::JMP},
//     OpInfo {i: 0x6D, cycle:4, mode: AddrMode::ABS, op: OpCodes::ADC},
//     OpInfo {i: 0x6E, cycle:6, mode: AddrMode::ABS, op: OpCodes::ROR},
//     OpInfo {i: 0x6F, cycle:6, mode: AddrMode::ABS, op: OpCodes::RRA},
//     OpInfo {i: 0x70, cycle:2, mode: AddrMode::REL, op: OpCodes::BVS},
//     OpInfo {i: 0x71, cycle:5, mode: AddrMode::IND_Y, op: OpCodes::ADC},
//     OpInfo {i: 0x72, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0x73, cycle:8, mode: AddrMode::IND_Y, op: OpCodes::RRA},
//     OpInfo {i: 0x74, cycle:4, mode: AddrMode::IMPL, op: OpCodes::NOPD},
//     OpInfo {i: 0x75, cycle:4, mode: AddrMode::ZPG_X, op: OpCodes::ADC},
//     OpInfo {i: 0x76, cycle:6, mode: AddrMode::ZPG_X, op: OpCodes::ROR},
//     OpInfo {i: 0x77, cycle:6, mode: AddrMode::ZPG_X, op: OpCodes::RRA},
//     OpInfo {i: 0x78, cycle:2, mode: AddrMode::IMPL, op: OpCodes::SEI},
//     OpInfo {i: 0x79, cycle:4, mode: AddrMode::ABS_Y, op: OpCodes::ADC},
//     OpInfo {i: 0x7A, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0x7B, cycle:7, mode: AddrMode::ABS_Y, op: OpCodes::RRA},
//     OpInfo {i: 0x7C, cycle:4, mode: AddrMode::IMPL, op: OpCodes::NOPI},
//     OpInfo {i: 0x7D, cycle:4, mode: AddrMode::ABS_X, op: OpCodes::ADC},
//     OpInfo {i: 0x7E, cycle:6, mode: AddrMode::ABS_X, op: OpCodes::ROR},
//     OpInfo {i: 0x7F, cycle:7, mode: AddrMode::ABS_X, op: OpCodes::RRA},
//     OpInfo {i: 0x80, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOPD},
//     OpInfo {i: 0x81, cycle:6, mode: AddrMode::IND_X, op: OpCodes::STA},
//     OpInfo {i: 0x82, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOPD},
//     OpInfo {i: 0x83, cycle:6, mode: AddrMode::IND_X, op: OpCodes::SAX},
//     OpInfo {i: 0x84, cycle:3, mode: AddrMode::ZPG, op: OpCodes::STY},
//     OpInfo {i: 0x85, cycle:3, mode: AddrMode::ZPG, op: OpCodes::STA},
//     OpInfo {i: 0x86, cycle:3, mode: AddrMode::ZPG, op: OpCodes::STX},
//     OpInfo {i: 0x87, cycle:3, mode: AddrMode::ZPG, op: OpCodes::SAX},
//     OpInfo {i: 0x88, cycle:2, mode: AddrMode::IMPL, op: OpCodes::DEY},
//     OpInfo {i: 0x89, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOPD},
//     OpInfo {i: 0x8A, cycle:2, mode: AddrMode::IMPL, op: OpCodes::TXA},
//     OpInfo {i: 0x8C, cycle:4, mode: AddrMode::ABS, op: OpCodes::STY},
//     OpInfo {i: 0x8D, cycle:4, mode: AddrMode::ABS, op: OpCodes::STA},
//     OpInfo {i: 0x8E, cycle:4, mode: AddrMode::ABS, op: OpCodes::STX},
//     OpInfo {i: 0x8F, cycle:4, mode: AddrMode::ABS, op: OpCodes::SAX},
//     OpInfo {i: 0x90, cycle:2, mode: AddrMode::REL, op: OpCodes::BCC},
//     OpInfo {i: 0x91, cycle:6, mode: AddrMode::IND_Y, op: OpCodes::STA},
//     OpInfo {i: 0x92, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0x94, cycle:4, mode: AddrMode::ZPG_X, op: OpCodes::STY},
//     OpInfo {i: 0x95, cycle:4, mode: AddrMode::ZPG_X, op: OpCodes::STA},
//     OpInfo {i: 0x96, cycle:4, mode: AddrMode::ZPG_Y, op: OpCodes::STX},
//     OpInfo {i: 0x97, cycle:4, mode: AddrMode::ZPG_Y, op: OpCodes::SAX},
//     OpInfo {i: 0x98, cycle:2, mode: AddrMode::IMPL, op: OpCodes::TYA},
//     OpInfo {i: 0x99, cycle:5, mode: AddrMode::ABS_Y, op: OpCodes::STA},
//     OpInfo {i: 0x9A, cycle:2, mode: AddrMode::IMPL, op: OpCodes::TXS},
//     OpInfo {i: 0x9D, cycle:4, mode: AddrMode::ABS_X, op: OpCodes::STA},
//     OpInfo {i: 0xA0, cycle:2, mode: AddrMode::IMD, op: OpCodes::LDY},
//     OpInfo {i: 0xA1, cycle:6, mode: AddrMode::IND_X, op: OpCodes::LDA},
//     OpInfo {i: 0xA2, cycle:2, mode: AddrMode::IMD, op: OpCodes::LDX},
//     OpInfo {i: 0xA3, cycle:6, mode: AddrMode::IND_X, op: OpCodes::LAX},
//     OpInfo {i: 0xA4, cycle:3, mode: AddrMode::ZPG, op: OpCodes::LDY},
//     OpInfo {i: 0xA5, cycle:3, mode: AddrMode::ZPG, op: OpCodes::LDA},
//     OpInfo {i: 0xA6, cycle:3, mode: AddrMode::ZPG, op: OpCodes::LDX},
//     OpInfo {i: 0xA7, cycle:3, mode: AddrMode::ZPG, op: OpCodes::LAX},
//     OpInfo {i: 0xA8, cycle:2, mode: AddrMode::IMPL, op: OpCodes::TAY},
//     OpInfo {i: 0xA9, cycle:2, mode: AddrMode::IMD, op: OpCodes::LDA},
//     OpInfo {i: 0xAA, cycle:2, mode: AddrMode::IMPL, op: OpCodes::TAX},
//     OpInfo {i: 0xAC, cycle:4, mode: AddrMode::ABS, op: OpCodes::LDY},
//     OpInfo {i: 0xAD, cycle:4, mode: AddrMode::ABS, op: OpCodes::LDA},
//     OpInfo {i: 0xAE, cycle:4, mode: AddrMode::ABS, op: OpCodes::LDX},
//     OpInfo {i: 0xAF, cycle:4, mode: AddrMode::ABS, op: OpCodes::LAX},
//     OpInfo {i: 0xB0, cycle:2, mode: AddrMode::REL, op: OpCodes::BCS},
//     OpInfo {i: 0xB1, cycle:5, mode: AddrMode::IND_Y, op: OpCodes::LDA},
//     OpInfo {i: 0xB2, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0xB3, cycle:5, mode: AddrMode::IND_Y, op: OpCodes::LAX},
//     OpInfo {i: 0xB4, cycle:4, mode: AddrMode::ZPG_X, op: OpCodes::LDY},
//     OpInfo {i: 0xB5, cycle:4, mode: AddrMode::ZPG_X, op: OpCodes::LDA},
//     OpInfo {i: 0xB6, cycle:4, mode: AddrMode::ZPG_Y, op: OpCodes::LDX},
//     OpInfo {i: 0xB7, cycle:4, mode: AddrMode::ZPG_Y, op: OpCodes::LAX},
//     OpInfo {i: 0xB8, cycle:2, mode: AddrMode::IMPL, op: OpCodes::CLV},
//     OpInfo {i: 0xB9, cycle:4, mode: AddrMode::ABS_Y, op: OpCodes::LDA},
//     OpInfo {i: 0xBA, cycle:2, mode: AddrMode::IMPL, op: OpCodes::TSX},
//     OpInfo {i: 0xBC, cycle:4, mode: AddrMode::ABS_X, op: OpCodes::LDY},
//     OpInfo {i: 0xBD, cycle:4, mode: AddrMode::ABS_X, op: OpCodes::LDA},
//     OpInfo {i: 0xBE, cycle:4, mode: AddrMode::ABS_Y, op: OpCodes::LDX},
//     OpInfo {i: 0xBF, cycle:4, mode: AddrMode::ABS_Y, op: OpCodes::LAX},
//     OpInfo {i: 0xC0, cycle:2, mode: AddrMode::IMD, op: OpCodes::CPY},
//     OpInfo {i: 0xC1, cycle:6, mode: AddrMode::IND_X, op: OpCodes::CMP},
//     OpInfo {i: 0xC2, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOPD},
//     OpInfo {i: 0xC3, cycle:8, mode: AddrMode::IND_X, op: OpCodes::DCP},
//     OpInfo {i: 0xC4, cycle:3, mode: AddrMode::ZPG, op: OpCodes::CPY},
//     OpInfo {i: 0xC5, cycle:3, mode: AddrMode::ZPG, op: OpCodes::CMP},
//     OpInfo {i: 0xC6, cycle:5, mode: AddrMode::ZPG, op: OpCodes::DEC},
//     OpInfo {i: 0xC7, cycle:5, mode: AddrMode::ZPG, op: OpCodes::DCP},
//     OpInfo {i: 0xC8, cycle:2, mode: AddrMode::IMPL, op: OpCodes::INY},
//     OpInfo {i: 0xC9, cycle:2, mode: AddrMode::IMD, op: OpCodes::CMP},
//     OpInfo {i: 0xCA, cycle:2, mode: AddrMode::IMPL, op: OpCodes::DEX},
//     OpInfo {i: 0xCC, cycle:4, mode: AddrMode::ABS, op: OpCodes::CPY},
//     OpInfo {i: 0xCD, cycle:4, mode: AddrMode::ABS, op: OpCodes::CMP},
//     OpInfo {i: 0xCE, cycle:6, mode: AddrMode::ABS, op: OpCodes::DEC},
//     OpInfo {i: 0xCF, cycle:6, mode: AddrMode::ABS, op: OpCodes::DCP},
//     OpInfo {i: 0xD0, cycle:2, mode: AddrMode::REL, op: OpCodes::BNE},
//     OpInfo {i: 0xD1, cycle:5, mode: AddrMode::IND_Y, op: OpCodes::CMP},
//     OpInfo {i: 0xD2, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0xD3, cycle:8, mode: AddrMode::IND_Y, op: OpCodes::DCP},
//     OpInfo {i: 0xD4, cycle:4, mode: AddrMode::IMPL, op: OpCodes::NOPD},
//     OpInfo {i: 0xD5, cycle:4, mode: AddrMode::ZPG_X, op: OpCodes::CMP},
//     OpInfo {i: 0xD6, cycle:6, mode: AddrMode::ZPG_X, op: OpCodes::DEC},
//     OpInfo {i: 0xD7, cycle:6, mode: AddrMode::ZPG_X, op: OpCodes::DCP},
//     OpInfo {i: 0xD8, cycle:2, mode: AddrMode::IMPL, op: OpCodes::CLD},
//     OpInfo {i: 0xD9, cycle:4, mode: AddrMode::ABS_Y, op: OpCodes::CMP},
//     OpInfo {i: 0xDA, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0xDB, cycle:7, mode: AddrMode::ABS_Y, op: OpCodes::DCP},
//     OpInfo {i: 0xDC, cycle:4, mode: AddrMode::IMPL, op: OpCodes::NOPI},
//     OpInfo {i: 0xDD, cycle:4, mode: AddrMode::ABS_X, op: OpCodes::CMP},
//     OpInfo {i: 0xDE, cycle:7, mode: AddrMode::ABS_X, op: OpCodes::DEC},
//     OpInfo {i: 0xDF, cycle:7, mode: AddrMode::ABS_X, op: OpCodes::DCP},
//     OpInfo {i: 0xE0, cycle:2, mode: AddrMode::IMD, op: OpCodes::CPX},
//     OpInfo {i: 0xE1, cycle:6, mode: AddrMode::IND_X, op: OpCodes::SBC},
//     OpInfo {i: 0xE2, cycle:3, mode: AddrMode::IMPL, op: OpCodes::NOPD},
//     OpInfo {i: 0xE3, cycle:8, mode: AddrMode::IND_X, op: OpCodes::ISB},
//     OpInfo {i: 0xE4, cycle:3, mode: AddrMode::ZPG, op: OpCodes::CPX},
//     OpInfo {i: 0xE5, cycle:3, mode: AddrMode::ZPG, op: OpCodes::SBC},
//     OpInfo {i: 0xE6, cycle:5, mode: AddrMode::ZPG, op: OpCodes::INC},
//     OpInfo {i: 0xE7, cycle:5, mode: AddrMode::ZPG, op: OpCodes::ISB},
//     OpInfo {i: 0xE8, cycle:2, mode: AddrMode::IMPL, op: OpCodes::INX},
//     OpInfo {i: 0xE9, cycle:2, mode: AddrMode::IMD, op: OpCodes::SBC},
//     OpInfo {i: 0xEA, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0xEB, cycle:2, mode: AddrMode::IMD, op: OpCodes::SBC},
//     OpInfo {i: 0xEC, cycle:4, mode: AddrMode::ABS, op: OpCodes::CPX},
//     OpInfo {i: 0xED, cycle:4, mode: AddrMode::ABS, op: OpCodes::SBC},
//     OpInfo {i: 0xEE, cycle:6, mode: AddrMode::ABS, op: OpCodes::INC},
//     OpInfo {i: 0xEF, cycle:6, mode: AddrMode::ABS, op: OpCodes::ISB},
//     OpInfo {i: 0xF0, cycle:2, mode: AddrMode::REL, op: OpCodes::BEQ},
//     OpInfo {i: 0xF1, cycle:5, mode: AddrMode::IND_Y, op: OpCodes::SBC},
//     OpInfo {i: 0xF2, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0xF3, cycle:8, mode: AddrMode::IND_Y, op: OpCodes::ISB},
//     OpInfo {i: 0xF4, cycle:4, mode: AddrMode::IMPL, op: OpCodes::NOPD},
//     OpInfo {i: 0xF5, cycle:4, mode: AddrMode::ZPG_X, op: OpCodes::SBC},
//     OpInfo {i: 0xF6, cycle:6, mode: AddrMode::ZPG_X, op: OpCodes::INC},
//     OpInfo {i: 0xF7, cycle:6, mode: AddrMode::ZPG_X, op: OpCodes::ISB},
//     OpInfo {i: 0xF8, cycle:2, mode: AddrMode::IMPL, op: OpCodes::SED},
//     OpInfo {i: 0xF9, cycle:4, mode: AddrMode::ABS_Y, op: OpCodes::SBC},
//     OpInfo {i: 0xFA, cycle:2, mode: AddrMode::IMPL, op: OpCodes::NOP},
//     OpInfo {i: 0xFB, cycle:7, mode: AddrMode::ABS_Y, op: OpCodes::ISB},
//     OpInfo {i: 0xFC, cycle:4, mode: AddrMode::IMPL, op: OpCodes::NOPI},
//     OpInfo {i: 0xFD, cycle:4, mode: AddrMode::ABS_X, op: OpCodes::SBC},
//     OpInfo {i: 0xFE, cycle:7, mode: AddrMode::ABS_X, op: OpCodes::INC},
//     OpInfo {i: 0xFF, cycle:7, mode: AddrMode::ABS_X, op: OpCodes::ISB}
// ];

struct Register {
    A: u8,
    X: u8,
    Y: u8,
    SP: u16,
    PC: u16,
    P: u8, // flags
}
impl Register {
    fn new() -> Register {
        Register {
            A: 0,
            X: 0,
            Y: 0,
            SP: 0xfd,
            PC: 0xc000,
            P: 0x24,
        }
    }
}

pub struct CPU {

}
